# This is a basic workflow to help you get started with Actions

name: CI

# Controls when the workflow will run
on:
  # Triggers the workflow on push or pull request events but only for the "main" branch
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "build"
  build:
    # The type of runner that the job will run on
    runs-on: macos-latest

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - uses: actions/checkout@v3

      # Runs a single command using the runners shell
      - name: Run a one-line script
        run: echo Hello, world!

      # Runs a single command using the runners shell
      #- name: Run a one-line script
      #  run: export SP_APIURL=https://app.signpath.io/Api  
      # Runs a single command using the runners shell
      #- name: Run a one-line script
      #  run: export SP_ORGID=dc2fd7b3-5b0d-40a4-96a6-27ab31969ee9
      # Runs a single command using the runners shell
      #- name: Run a one-line script
      #  run: export SP_CIUSERTOKEN=${{ secrets.CIUSERTOKEN }}

      

      # Runs a set of commands using the runners shell
      - name: Run a multi-line script
        run: |
          echo Add other actions to build,
          echo test, and deploy your project.
          export SP_APIURL=https://app.signpath.io/Api
          export SP_ORGID=dc2fd7b3-5b0d-40a4-96a6-27ab31969ee9
          export SP_CIUSERTOKEN=${{ secrets.CIUSERTOKEN }}
          chmod +x SignPathSigningManager
          chmod +x SignPathSigningManager.app/Contents/MacOS/SignPathSigningManager

          ls -l /Users/runner/work/macos-runner-test/macos-runner-test/SignPathSigningManager.app/Contents/PlugIns/ctk.appex/Contents/MacOS/ctk
          chmod +x /Users/runner/work/macos-runner-test/macos-runner-test/SignPathSigningManager.app/Contents/PlugIns/ctk.appex/Contents/MacOS/ctk
          open "SignPathSigningManager.app"  --args -s CryptoProvidersTestProject/release-signing -t ${{ secrets.CIUSERTOKEN }} -u https://app.signpath.io/Api -o dc2fd7b3-5b0d-40a4-96a6-27ab31969ee9
          pluginkit -a "SignPathSigningManager.app/Contents/PlugIns/ctk.appex"
          #echo ./SignPathSigningManager.app/Contents/MacOS/SignPathSigningManager -s CryptoProvidersTestProject/release-signing -t ${{ secrets.CIUSERTOKEN }} -u https://app.signpath.io/Api -o dc2fd7b3-5b0d-40a4-96a6-27ab31969ee9         
          sleep 5
          #log show --last 1m
          pluginkit -m -v -p com.apple.ctk-tokens
          security list-smartcard
          security list-keychains
          #security export-smartcard
          codesign -f -s "CryptoProvidersReleaseCert" NoSignature.app
          codesign -v --verbose NoSignature.app
